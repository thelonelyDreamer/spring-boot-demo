package com.felixwc.springboot.aop;

// aop 常用场景
/**
 *
 * 日志记录
 * 权限验证
 * 事务处理
 * 效率检查
 * 异常处理
 * 缓存处理
 * 数据持久化
 * 内容分发
 */

// aop 主要概念

/**
 * aspect: 切面，切面有切点和通知组成，即包括横切逻辑的定义也包括连接点的定义
 * pointcut: 切点，每个类都拥有多个连接点，可以理解为连接点的集合
 * joinpoint: 连接点，程序执行的某个特定位置，如某个方法调用前后等
 * weaving: 织入，将增强添加到目标类具体连接点的过程
 * advice: 通知，是织入到墓边类连接点上的一段代码，就是具体在哪个地方执行的额外功能
 * target: 目标对象，通过织入的目标类
 * aop proxy: 代理对象，即增强后产生的对象
 */

// Spring AOP 底层实现
/**
 * 通过JDK动态代理或CGLib代理在运行时期对象初始化阶段织入代码的
 */